show databases;
DROP DATABASE IF EXISTS TOWASHOP;


CREATE DATABASE TOWASHOP character set='UTF8MB4';



USE TOWASHOP;

desc USER_ROLES;
drop table USER_ROLES;



CREATE TABLE ROLEVIEWS(
	RID INT AUTO_INCREMENT,
	ROLENAME NVARCHAR(15) NOT NULL,
	R_DESCRIPTION NVARCHAR(50) NULL DEFAULT NULL,
	CONSTRAINT PK_ROLEVIEWS
		PRIMARY KEY (RID)
);




CREATE TABLE ACCOUNTS(
	USERID NVARCHAR(9),
	USERNAME NVARCHAR(25) NOT NULL,
	PASSWORD_HASH NVARCHAR(32) NOT NULL,
	REGISTER_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	LAST_LOGIN DATETIME NULL,
	CONTENT NVARCHAR(255) NULL DEFAULT NULL,
	CONSTRAINT PK_ACCOUNTS
		PRIMARY KEY (USERID),
	CONSTRAINT CK_UNIQUE_USERNAME
		UNIQUE(USERNAME)
);



CREATE TABLE ACCOUNT_ROLEVIEWS(
	AR_UID NVARCHAR(9) NOT NULL,
	AR_RID INT NOT NULL,
	CONSTRAINT PK_ACCOUNT_ROLES 
		PRIMARY KEY (AR_UID,AR_RID),
	CONSTRAINT FK_ACCOUNT_ROLES
		FOREIGN KEY (AR_UID) REFERENCES ACCOUNTS(USERID) 
				ON DELETE CASCADE,
		FOREIGN KEY (AR_RID) REFERENCES ROLEVIEWS(RID)
                ON DELETE CASCADE
);




CREATE TABLE EMPLOYEES( 
	EMPLOYEEID NVARCHAR(8),
	EC_UID NVARCHAR(9) NULL,
	CID NVARCHAR(11) NULL,
	FIRST_NAME NVARCHAR(15) NOT NULL,
	LAST_NAME NVARCHAR(15) NOT NULL,
	BIRTHDATE DATETIME NULL,
	SEX SMALLINT NULL DEFAULT '0',
	TITLE NVARCHAR(25) NULL,
	HIRE_DATE DATETIME NULL,
	ADDRESS NVARCHAR(50) NULL,
	PHONE VARCHAR(20) NOT NULL,
	UPDATE_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONTENT NVARCHAR(255) NULL DEFAULT NULL,
	CONSTRAINT PK_EMPLOYEES
		PRIMARY KEY (EMPLOYEEID),
	CONSTRAINT CK_UNIQUE_CID
		UNIQUE(CID)
);



CREATE TABLE EMPLOYEE_ACCOUNTS(
    EC_UID NVARCHAR(9) NOT NULL,
    EC_EID NVARCHAR(8) NOT NULL,
	
	CONSTRAINT PK_EMPLOYEE_ACCOUNTS
		PRIMARY KEY(EC_UID,EC_EID),
	 CONSTRAINT FK_EMPLOYEE_ACCOUNTS
        FOREIGN KEY (EC_UID) REFERENCES ACCOUNTS(USERID),
        FOREIGN KEY (EC_EID) REFERENCES EMPLOYEES (EMPLOYEEID)
				ON DELETE CASCADE 
);


CREATE TABLE CATEGORIES(
    CATEGORYID INT AUTO_INCREMENT,
    CATEGORYNAME NVARCHAR(15) UNIQUE,
    C_DESCRIPTION NVARCHAR(60) NULL DEFAULT  NULL,
	CONTENT NVARCHAR(255) NULL DEFAULT NULL,
    CONSTRAINT PK_CATEGOIRES
        PRIMARY KEY (CATEGORYID),
	CONSTRAINT CK_UNIQUE_NAME
		UNIQUE(CATEGORYNAME)
);


CREATE TABLE SUPPLIERS(
	SUPPLIERID NVARCHAR(8),
	SUPPLIER_NAME NVARCHAR(30) NOT NULL,
	CONTACT_NAME NVARCHAR(45) NULL,
	CONTACT_PHONE VARCHAR(20) NOT NULL,
	SL_ADDRESS NVARCHAR(50) NULL DEFAULT NULL,
	CITY NVARCHAR(20) NULL DEFAULT NULL,
	COUNTRY NVARCHAR(20) NULL DEFAULT NULL,
	CONTENT NVARCHAR(255) NULL DEFAULT NULL,
	CONSTRAINT PK_SUPPLIERS
		PRIMARY KEY (SUPPLIERID)
);

CREATE TABLE CUSTOMERS(
	CUSTOMERID NVARCHAR(8), -- CT1000 ~ 
	CID NVARCHAR(11) NULL,
	FIRST_NAME NVARCHAR(15) NOT NULL,
	LAST_NAME NVARCHAR(15) NOT NULL,
	CONTACT_PHONE VARCHAR(20) NOT NULL,
	SL_ADDRESS NVARCHAR(50) NULL DEFAULT NULL,
	CITY NVARCHAR(20) NULL DEFAULT NULL,
	COUNTRY NVARCHAR(20) NULL DEFAULT NULL,
	CONTENT NVARCHAR(255) NULL DEFAULT NULL,
	CONSTRAINT PK_CUSTOMERS
		PRIMARY KEY (CUSTOMERID)
);


CREATE TABLE PRODUCTS(
	PRODUCTID NVARCHAR(8),
    PRODUCTNAME NVARCHAR(40) NOT NULL,
	BARCODE NVARCHAR(32) NULL DEFAULT NULL,
    QUANTITY_PER_UNIT  NVARCHAR(20) NULL,
    UNIT_PRICE  FLOAT DEFAULT (0),
    SALES_PRICE FLOAT DEFAULT (0),
    UNIT_ON_STOCK SMALLINT DEFAULT(0),
    UNIT_ON_ORDER SMALLINT DEFAULT(0),
    VAT FLOAT DEFAULT (0),
	STATUS NVARCHAR(20) NULL,
	CONTENT NVARCHAR(255) NULL DEFAULT NULL,
	CONSTRAINT PK_PRODUCTS
		PRIMARY KEY (PRODUCTID),
	CONSTRAINT CK_PRODUCTS
		CHECK (UNIT_PRICE>=0),
		CHECK (SALES_PRICE>=0),
		CHECK(UNIT_ON_STOCK>=0),
		CHECK (UNIT_ON_STOCK>=0)
);


CREATE TABLE PRODUCT_CATEGORIES(
	PC_ID INT AUTO_INCREMENT,
	PC_PID NVARCHAR(8) UNIQUE,
	PC_CATEID INT DEFAULT(0)NULL,
	CONSTRAINT PK_PRODUCT_CATEGORIES
		PRIMARY KEY (PC_ID),
	CONSTRAINT FK_PRODUCT_CATEGORIES
		FOREIGN KEY (PC_PID) REFERENCES PRODUCTS(PRODUCTID) ON DELETE CASCADE,
		FOREIGN KEY(PC_CATEID) REFERENCES CATEGORIES(CATEGORYID) ON DELETE CASCADE
);


CREATE TABLE PRODUCT_SUPPLIERS(
	PS_ID INT AUTO_INCREMENT,
	PS_PID NVARCHAR(8) UNIQUE,
	PS_SLID NVARCHAR(8) NULL,
	CONSTRAINT PK_PRODUCT_SUPPLIERS
		PRIMARY KEY(PS_ID),
	CONSTRAINT FK_PRODUCT_SUPPLIERS
		FOREIGN KEY (PS_PID) REFERENCES PRODUCTS(PRODUCTID) ON DELETE CASCADE,
		FOREIGN KEY (PS_SLID) REFERENCES SUPPLIERS(SUPPLIERID) ON DELETE CASCADE
);





CREATE TABLE ORDERS(
	ORDERID NVARCHAR(9),
	CREATED_BY NVARCHAR(9) NULL DEFAULT NULL,
	CREATED_AT DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
	UPDATED_AT DATETIME NULL DEFAULT NULL,
	ORDER_TYPE SMALLINT NOT NULL DEFAULT (0), -- 0 - CUSTOMERS ORDER  1 - NEW STOCK PURCHARGE 
	PAYMENT_METHOD SMALLINT NOT NULL DEFAULT (0), -- 0 CASH -  1 CREDIT
	TOTAL FLOAT NOT NULL DEFAULT 0,
	GRAND_TOTAL FLOAT NULL DEFAULT (0),
	STATUS SMALLINT NULL DEFAULT (0), -- NEW
	COMMENTS NVARCHAR(255) NULL DEFAULT NULL,
	CONSTRAINT PK_ORDERS
		PRIMARY KEY (ORDERID),
	CONSTRAINT FK_ORDERS
		FOREIGN KEY(CREATED_BY) REFERENCES ACCOUNTS(USERID)
);



CREATE TABLE ORDER_DETAILS(
	OD_ID INT AUTO_INCREMENT,
	OD_OID NVARCHAR(9),
	OD_PID NVARCHAR(8),
	UNIT_PRICE FLOAT NOT NULL DEFAULT (0),
	QUANTITY SMALLINT NOT NULL DEFAULT (1),
	DISCOUNT FLOAT NOT NULL DEFAULT(0),
	CONSTRAINT PK_ORDER_DETAILS
		PRIMARY KEY (OD_ID),
	CONSTRAINT FK_ORDER_DETAILS
		FOREIGN KEY (OD_OID) REFERENCES ORDERS(ORDERID) ON DELETE CASCADE,
		FOREIGN KEY (OD_PID) REFERENCES PRODUCTS(PRODUCTID),
	CONSTRAINT CK_DISCOUNT 
		CHECK (DISCOUNT>=0 AND DISCOUNT<=1),
	CONSTRAINT CK_QUANTITY
		CHECK(QUANTITY>0),
	CONSTRAINT CK_UNIT_PRICE
		CHECK (UNIT_PRICE>=0)
);


CREATE TABLE CUSTOMER_ORDERS(
	CO_ID INT AUTO_INCREMENT,
	CO_CTID NVARCHAR(8),
	CO_OID NVARCHAR(9),
	CONSTRAINT PK_CUSTOMER_ORDERS 
		PRIMARY KEY (CO_ID),
	CONSTRAINT CK_CUSTOMER_ORDERS
		UNIQUE (CO_CTID,CO_OID),
	CONSTRAINT FK_CUSTOMER_ORDERS
		FOREIGN KEY (CO_CTID) REFERENCES CUSTOMERS(CUSTOMERID) ,
		FOREIGN KEY (CO_OID) REFERENCES ORDERS(ORDERID)
);


CREATE TABLE SUPPLY_STOCKS(
	SO_ID INT AUTO_INCREMENT,
	SO_SLID NVARCHAR(8),
	SO_OID NVARCHAR(9),
	CONSTRAINT PK_ORDER_SUPPLIERS 
		PRIMARY KEY (SO_ID),
	CONSTRAINT CK_ORDER_SUPPLIERS
		UNIQUE (SO_SLID,SO_OID),
	CONSTRAINT FK_ORDER_SUPPLIERS
		FOREIGN KEY (SO_SLID) REFERENCES SUPPLIERS(SUPPLIERID),
		FOREIGN KEY (SO_OID) REFERENCES ORDERS(ORDERID)
);